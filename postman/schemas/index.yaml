openapi: "3.0.0"
info:
    version: "1.0.1"
    title: "SOS API"
    description: Social network REST Api
servers:
    - url: http://localhost:8000
paths:
    /users:
        post:
            summary: Añadir un usuario nuevo a la red
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: User with "username" added
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        get:
            summary: Obtener una lista de todos los usuarios existentes en la red social.
            parameters:
                - name: q
                  in: query
                  description: Filtro de búsqueda por nombre
                  schema:
                      type: string
            responses:
                "200":
                    description: Lista de usuarios
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
    /users/{id}:
        parameters:
            - name: id
              description: The unique identifier of the user
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        get:
            summary: Ver los datos básicos de un usuario
            responses:
                "200":
                    description: Datos del usuario
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        put:
            summary: Cambiar datos básicos de nuestro perfil de usuario
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: Usuario actualizado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        delete:
            summary: Borrar nuestro perfil de la red social
            responses:
                "200":
                    description: Usuario eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden

    /users/{id}/friends:
        parameters:
            - name: id
              description: Identificador del usuario
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        post:
            summary: Añadir un nuevo amigo de entre los usuarios registrados en la red social
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: Amigo añadido
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        get:
            x-summary: Obtener una lista de todos nuestros amigos, permite la opción de ser filtrada por el patrón de nombre o limitar la cantidad de información obtenida por número de amigos
            summary: Listado de amigos
            parameters:
                - name: q
                  in: query
                  description: Filtro de búsqueda por nombre
                  schema:
                      type: string
                - name: limit
                  in: query
                  description: Número máximo de amigos a devolver
                  schema:
                      type: integer
                      minimum: 1
                      maximum: 100
            responses:
                "200":
                    description: Lista de amigos
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
    /users/{id}/friends/{friend_id}:
        parameters:
            - name: id
              description: Identificador del usuario
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
            - name: friend_id
              description: Identificador de usuario del amigo
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        delete:
            summary: Eliminar un amigo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
    /users/{id}/messages:
        parameters:
            - name: id
              description: Identificador del usuario
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        post:
            summary: Un usuario puede publicar un nuevo mensaje en su página personal
            responses:
                "200":
                    description: Mensaje publicado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
        get:
            summary: Obtener una lista de todos los mensajes escritos por un usuario en su página personal. Además, esta lista debe permitir la opción de ser filtrada por fecha o limitar la cantidad de información obtenida por número
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
    /users/{id}/messages/{message_id}:
        parameters:
            - name: id
              description: Identificador del usuario
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
            - name: message_id
              description: Identificador del mensaje
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        get:
            x-summary: Ver mensaje
            summary: Obtener detalles sobre un mensaje específico
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        put:
            x-summary: Editar mensaje
            summary: Un usuario puede editar un mensaje de su página personal
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        delete:
            x-summary: Eliminar mensaje
            summary: Un usuario puede eliminar un mensaje de su página personal
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
        
    /users/{id}/messages/friends:
        parameters:
            - name: id
              description: Identificador del usuario
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        get:
            x-summary: Consultar últimos mensajes publicados de amigos
            summary: Consultar los últimos mensajes publicados de nuestros amigos en su página personal obtener una lista de los últimos mensajes de todos mis amigos, pudiendo filtrar estos mensajes por fecha (último antes de cierta fecha). Poder limitar la cantidad de información obtenida por número.
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
    /users/{id}/messages/friends/search:
        parameters:
            - name: id
              description: Identificador del usuario
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/UserId"
        get:
            x-summary: Buscar en mensajes de amigos
            summary: Buscar en todos los mensajes de nuestros amigos por contenido –contiene un determinado texto-. Poder limitar la cantidad de información obtenida por número.
            responses:
                "200":
                    description: Amigo eliminado
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserList"
                "404":
                    description: User not found
                "400":
                    description: Invalid ID type supplied
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
          description: The unique identifier for the user.
        name:
          type: string
          description: The name of the user.
        email:
          type: string
          format: email
          description: The email address of the user.
        age:
          type: integer
          description: The age of the user.
      required:
        - userId
        - name
        - email
        - age
    UserId:
      type: object
      properties:
        userId:
          type: string
          description: The unique identifier for the user.
      required:
        - userId
    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserId"
      required:
        - users
    Message:
        type: object
        properties:
            messageId:
                type: string
                description: The unique identifier for the post.
            author:
                $ref: "#/components/schemas/UserId"
                description: The user that posted the message.
            receiver:
                $ref: "#/components/schemas/UserId"
                description: The user that received the message.
            message:
                type: string
                maximum: 256
                description: The 256 chars message.
            time:
                type: string
                format: date-time
                description: The moment the message was posted.
        required:
            - messageId
            - author
            - message
            - time
